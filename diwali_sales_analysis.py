# -*- coding: utf-8 -*-
"""Diwali_Sales_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lNjyNOzscVdAI_CqLYtFO1C3BObhr7qT

**Import libraries / Dependencies**
"""

# Commented out IPython magic to ensure Python compatibility.
# Data manipulation libraries
import numpy as np
import pandas as pd

# Data visualization libraries
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

# to avoide encoding error, use unicode escape

df = pd.read_csv('/content/Diwali Sales Data.csv', encoding = 'unicode_escape')

# shows the total number of rows and columns in a dataframe

df.shape

# print the first 5 rows from your dataframe by default

df.head(10)

"""**Data Cleaning**"""

# Give more information about your dataframe

df.info()

# drop unrelated/black columns

df.drop(['Status','unnamed1'], axis=1, inplace=True)

# check for null values

pd.isnull(df).sum()

# remove/drop null values

df.dropna(inplace=True)

# Changing the datatype of a particular column of a dataframe

df['Amount'] = df['Amount'].astype('int')

df['Amount'].dtypes

df.columns

# To get description of the data in the dataframe (i.e, mean,count,std, etc)

df.describe()

df[['Age','Orders','Amount']].describe()

"""**Exploratory Data Analysis (EDA)**"""

df.columns

"""**Gender**"""

# define a color palette for the genders
gender_palette = {'F':'orange','M':'green'}

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(5, 4))

# create the countplot to see the distribution of data
cp = sns.countplot(x='Gender', data=df, palette= gender_palette, hue='Gender', legend=False)

# add lebels to the bars
for bars in cp.containers:
  cp.bar_label(bars)

# define a color palette for the genders
gender_palette = {'F':'orange','M':'green'}

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(5, 4))

# grouping my gender column based on amount column
bp = df.groupby(['Gender'], as_index= False)['Amount'].sum().sort_values(by='Amount',ascending=False)

# creating a bar plot
sns.barplot(x='Gender',y='Amount',data=bp, palette= gender_palette, hue='Gender', legend=False)

"""***From the above graphs we can see that the most of the buyers are females and even have greater purchasing power than man***

**Age Group**
"""

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(7, 4))

# create the countplot to see the distribution of data
cp = sns.countplot(x='Age Group', data=df, hue='Gender')

# add lebels to the bars
for bars in cp.containers:
  cp.bar_label(bars)

# define a color palette for the age groups
age_palette = {'26-35':'blue','36-45':'orange','18-25':'green','46-50':'red','51-55':'yellow','55+':'violet','0-17':'pink'}

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(7, 4))

# grouping my age group column based on amount column
bp = df.groupby(['Age Group'],as_index=False) ['Amount'].sum().sort_values(by='Amount',ascending=False)

# creating a bar plot
sns.barplot(x='Age Group',y='Amount',data=bp, palette=age_palette, hue='Age Group', legend=False)

"""***From above graphs we can see that the most of the buyers are from the age group of 26-35 and are women***

**State**
"""

# total number of orders from top 10 states

# define a color palette for the states
states = ['blue','orange','green','red','yellow','darkblue','pink','orchid','skyblue','lightgreen']

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(16, 4))

# grouping my state column based on orders column
bp = df.groupby(['State'],as_index=False) ['Orders'].sum().sort_values(by='Orders',ascending=False).head(10)

# creating a bar plot
sns.barplot(x='State',y='Orders',data=bp, palette=states, hue='State', legend=False)

# total amount/sales from top 10 states

# define a color palette for the states
states = ['blue','orange','green','red','yellow','darkblue','pink','orchid','skyblue','lightgreen']

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(16, 4))

# grouping my state column based on amount column
bp = df.groupby(['State'],as_index=False) ['Amount'].sum().sort_values(by='Amount',ascending=False).head(10)

# creating a bar plot
sns.barplot(x='State',y='Amount',data=bp, palette=states, hue='State', legend=False)

"""***From the above graph we can see that the most of the orders and maximum sales are from the state of UP, Maharashtra, Karnataka, respectively***

**Marital Status**
"""

# define a color palette
marital = ['darkblue','yellow']

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(5, 4))

# create the countplot to see the distribution of data
cp = sns.countplot(x='Marital_Status', data=df, palette=marital, hue='Marital_Status', legend=False)

# add lebels to the bars
for bars in cp.containers:
  cp.bar_label(bars)

# define a color palette
marital = ['darkblue','yellow']

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(5, 4))

# grouping my marital_status column based on amount column
bp = df.groupby(['Marital_Status','Gender'], as_index= False)['Amount'].sum().sort_values(by='Amount',ascending=False)

# creating a bar plot
sns.barplot(x='Marital_Status',y='Amount',data=bp, palette= marital, hue='Gender')

"""***From the above graph we can see that most of the buyers are married(women) and have high purchasing powe***r"""

df.head()

"""**Occupation**"""

# define a color palette for the occupations
occup = ['red','blue','green','orange','purple','yellow','cyan','magenta','black','lightgreen','gold','pink','gray','brown','lightblue']

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(20, 5))

# create the countplot to see the distribution of data
cp = sns.countplot(x='Occupation', data=df, palette=occup, hue='Occupation', legend=False)

# add lebels to the bars
for bars in cp.containers:
  cp.bar_label(bars)

# define a color palette for the occupations
occup = ['red','blue','green','orange','purple','yellow','cyan','magenta','black','lightgreen','gold','pink','gray','brown','lightblue']

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(20, 5))

# grouping my occupation column based on amount column
bp = df.groupby(['Occupation'], as_index= False)['Amount'].sum().sort_values(by='Amount',ascending=False)

# creating a bar plot
sns.barplot(x='Occupation',y='Amount',data=bp, palette= occup, hue='Occupation', legend=False)

"""***From the above graphs we can see that most of buyers are woring in IT Sector, Healthcare, Aviation, repectivel***y

**Product Category**
"""

# define a color palette for the category
category = ['red','blue','green','orange','purple','yellow','cyan','magenta','black','lightgreen','gold','pink','teal','brown','lightblue','silver','gray','maroon']

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(25, 5))

# create the countplot to see the distribution of data
cp = sns.countplot(x='Product_Category', data=df, palette=category, hue='Product_Category', legend=False)

# add lebels to the bars
for bars in cp.containers:
  cp.bar_label(bars)

# define a color palette for the category
category = ['red','blue','green','orange','purple','yellow','cyan','magenta','black','lightgreen']

# Set the size of the plot (Adjust width and height as needed)
plt.figure(figsize=(25, 6))

# grouping my category column based on amount column
bp = df.groupby(['Product_Category'], as_index= False)['Amount'].sum().sort_values(by='Amount',ascending=False).head(10)

# creating a bar plot
sns.barplot(x='Product_Category',y='Amount',data=bp, palette= category, hue='Product_Category', legend=False)

"""***From the above graphs we can see that most of the sold products are Food, Clothing & Apparel , Electronocs & Gadgets, respectively***

**Conclusions :**

***Married women, age group 26-35 yrs from UP, Maharastra and Karnataka working in IT Sector, Healthcare and Aviation are more likely to buy products from Food,Clothing and Electronics category***
"""